// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	easyjson "github.com/MrPixik/url_shortener/internal/app/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDatabaseService is a mock of DatabaseService interface.
type MockDatabaseService struct {
	ctrl     *gomock.Controller
	recorder *MockDatabaseServiceMockRecorder
}

// MockDatabaseServiceMockRecorder is the mock recorder for MockDatabaseService.
type MockDatabaseServiceMockRecorder struct {
	mock *MockDatabaseService
}

// NewMockDatabaseService creates a new mock instance.
func NewMockDatabaseService(ctrl *gomock.Controller) *MockDatabaseService {
	mock := &MockDatabaseService{ctrl: ctrl}
	mock.recorder = &MockDatabaseServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDatabaseService) EXPECT() *MockDatabaseServiceMockRecorder {
	return m.recorder
}

// CreateUrl mocks base method.
func (m *MockDatabaseService) CreateUrl(ctx context.Context, shortURL, originalURL string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUrl", ctx, shortURL, originalURL)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUrl indicates an expected call of CreateUrl.
func (mr *MockDatabaseServiceMockRecorder) CreateUrl(ctx, shortURL, originalURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUrl", reflect.TypeOf((*MockDatabaseService)(nil).CreateUrl), ctx, shortURL, originalURL)
}

// GetUrlByShortName mocks base method.
func (m *MockDatabaseService) GetUrlByShortName(ctx context.Context, shortUrl string) (easyjson.URLDB, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrlByShortName", ctx, shortUrl)
	ret0, _ := ret[0].(easyjson.URLDB)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUrlByShortName indicates an expected call of GetUrlByShortName.
func (mr *MockDatabaseServiceMockRecorder) GetUrlByShortName(ctx, shortUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrlByShortName", reflect.TypeOf((*MockDatabaseService)(nil).GetUrlByShortName), ctx, shortUrl)
}

// Ping mocks base method.
func (m *MockDatabaseService) Ping() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping")
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockDatabaseServiceMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockDatabaseService)(nil).Ping))
}
